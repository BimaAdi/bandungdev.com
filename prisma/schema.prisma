// https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id String @id @default(cuid())

  fullname String
  username String @unique(map: "User.username_unique")
  email    String @unique(map: "User.email_unique")

  password UserPassword?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model UserPassword {
  id String @id @default(cuid())

  user   User   @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  userId String @unique

  hash String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Event {
  id String @id @default(cuid())

  title       String
  description String?   @db.Text
  date        DateTime?

  category   EventCategory? @relation(fields: [categoryId], references: [id])
  categoryId String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([categoryId])
}

model EventCategory {
  id String @id @default(cuid())

  sequence    Int?    @unique // 1 | 2 | 3 | ...
  symbol      String  @unique // "MEETUP"
  name        String  @unique // "Meetup"
  description String? @db.Text // "Long description"

  events Event[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Example {
  id String @id @default(cuid())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
